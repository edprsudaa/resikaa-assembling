<?php

namespace app\models\medis;

use Yii;
use app\models\pegawai\TbPegawai;
use app\models\pendaftaran\Layanan;
use app\models\pegawai\DmUnitPenempatan;
/**
 * This is the model class for table "medis.permintaan_konsultasi".
 *
 * @property int $id
 * @property int $layanan_id_minta reff pendaftaran.layanan.id
 * @property int $dokter_id_minta reff pegawai.tb_pegawai.id
 * @property string $tanggal_minta
 * @property string $diagnosa_kerja
 * @property string $riwayat_klinik_singkat
 * @property string $jenis_konsultasi Evaluasi|Konsultasi|Alih Rawat|Rawat Bersama|Pemeriksaan Untuk Persiapan Operasi|Lain-lain(Narasi)
 * @property int|null $dokter_id_tujuan reff pegawai.tb_pegawai.id
 * @property int $batal
 * @property string|null $tanggal_batal
 * @property string $created_at
 * @property int $created_by
 * @property string|null $updated_at
 * @property int|null $updated_by
 * @property string|null $log_data
 * @property int $is_deleted
 */
class PermintaanKonsultasi extends BaseModelAR
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'medis.permintaan_konsultasi';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['layanan_id_minta', 'dokter_id_minta', 'diagnosa_kerja', 'riwayat_klinik_singkat','unit_id_poli_tujuan'], 'required','on'=>'konsul_rj','message'=>'{attribute} harus diisi'],
            [['layanan_id_minta', 'dokter_id_minta', 'diagnosa_kerja', 'riwayat_klinik_singkat','dokter_id_jawab'], 'required','on'=>'konsul_ri','message'=>'{attribute} harus diisi'],
            [['layanan_id_minta', 'dokter_id_minta', 'dokter_id_tujuan', 'batal', 'created_by', 'updated_by', 'is_deleted'], 'default', 'value' => null],
            [['layanan_id_minta', 'dokter_id_minta','unit_id_poli_tujuan', 'dokter_id_tujuan', 'batal', 'created_by', 'updated_by', 'is_deleted'], 'integer'],
            [['tanggal_minta', 'tanggal_batal', 'created_at', 'updated_at'], 'safe'],
            [['diagnosa_kerja', 'riwayat_klinik_singkat', 'jenis_konsultasi', 'log_data'], 'string'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'layanan_id_minta' => 'Layanan Yang Meminta',
            'dokter_id_minta' => 'Dokter Yang Meminta',
            'tanggal_minta' => 'Tanggal Minta',
            'diagnosa_kerja' => 'Diagnosa Kerja',
            'riwayat_klinik_singkat' => 'Riwayat Klinik Singkat',
            'jenis_konsultasi' => 'Jenis Konsultasi',
            'unit_id_poli_tujuan' => 'Poli Tujuan',
            'dokter_id_tujuan' => 'Dokter Tujuan',
            'batal' => 'Batal',
            'tanggal_batal' => 'Tanggal Batal',
            'created_at' => 'Created At',
            'created_by' => 'Created By',
            'updated_at' => 'Updated At',
            'updated_by' => 'Updated By',
            'log_data' => 'Log Data',
            'is_deleted' => 'Is Deleted',
        ];
    }
    public function beforeSave($insert) {
        if ($insert) {
            $this->is_deleted = 0;
            $this->batal = 0;
            $this->tanggal_minta = date('Y-m-d H:i:s');
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    /**
     * {@inheritdoc}
     * @return PermintaanKonsultasiQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new PermintaanKonsultasiQuery(get_called_class());
    }
    public function getDokterMinta()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'dokter_id_minta']);
    }
    public function getLayananMinta()
    {
        return $this->hasOne(Layanan::className(),['id'=>'layanan_id_minta']);
    }
    function getUnitTujuan()
    {
        return $this->hasOne(DmUnitPenempatan::className(),['kode'=>'unit_id_poli_tujuan']);
    }
    public function getDokterTujuan()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'dokter_id_tujuan']);
    }
    public function getJawabanKonsultasi()
    {
        return $this->hasMany(JawabanKonsultasi::className(),['permintaan_konsultasi_id'=>'id']);
    }
}
