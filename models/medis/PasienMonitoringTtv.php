<?php

namespace app\models\medis;

use Yii;
use app\models\pegawai\TbPegawai;
use app\models\pendaftaran\Layanan;

class PasienMonitoringTtv extends BaseModelAR
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'medis.pasien_monitoring_ttv';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['layanan_id', 'perawat_id','nadi','suhu','pernafasan','td_sistolik','td_diastolik'], 'required'],
            [['layanan_id', 'perawat_id', 'batal', 'draf', 'created_by', 'updated_by', 'is_deleted','perawat_final'], 'default', 'value' => null],
            [['layanan_id', 'perawat_id', 'batal', 'draf', 'created_by', 'updated_by', 'is_deleted', 'is_iwl','perawat_final','id_dokumen_rme'], 'integer'],
            [['created_at', 'updated_at','tanggal'], 'safe'],
            [['log_data','lokasi_drain_i','lokasi_drain_ii','lokasi_drain_iii','versi'], 'string'],
            [['nadi', 'pernafasan','suhu', 'berat_badan', 'tinggi_badan', 'masuk_per_oral_ngt', 'masuk_perenteral', 'masuk_transfusi', 'masuk_obat_lainnya', 'keluar_kemih', 'keluar_muntah', 'keluar_drain_i', 'keluar_drain_ii', 'keluar_drain_iii', 'keluar_lainnya', 'defeksi_bab', 'iwl', 'balance', 'td_sistolik', 'td_diastolik'], 'number'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'layanan_id' => 'Layanan ID',
            'perawat_id' => 'Perawat ID',
            'batal' => 'Batal',
            'tanggal_batal' => 'Tanggal Batal',
            'draf' => 'Draf',
            'tanggal_final' => 'Tanggal Final',
            'created_at' => 'Created At',
            'created_by' => 'Created By',
            'updated_at' => 'Updated At',
            'updated_by' => 'Updated By',
            'log_data' => 'Log Data',
            'is_deleted' => 'Is Deleted',
            'tanggal' => 'Tanggal',
            'nadi' => 'Nadi',
            'suhu' => 'Suhu',
            'pernafasan' => 'Pernafasan',
            'td_sistolik' => 'TD Sistolik',
            'td_diastolik' => 'TD Diastolik',
            'berat_badan' => 'Berat Badan',
            'tinggi_badan' => 'Tinggi Badan',
            'masuk_per_oral_ngt' => 'Per Oral/NGT',
            'masuk_perenteral' => 'Perenteral',
            'masuk_transfusi' => 'Transfusi',
            'masuk_obat_lainnya' => 'Obat Lainnya',
            'keluar_kemih' => 'Kemih',
            'keluar_muntah' => 'Muntah',
            'keluar_drain_i' => 'Drain I',
            'keluar_drain_ii' => 'Drain II',
            'keluar_drain_iii' => 'Drain III',
            'keluar_lainnya' => 'Lainnya',
            'defeksi_bab' => 'Defeksi/BAB',
            'iwl' => 'IWL',
            'balance' => 'Balance',
        ];
    }

    public function beforeSave($insert) {
        
        if ($insert) {
            $this->batal = 0;
            $this->draf = 1;
            $this->is_deleted = 0;
            // $this->tanggal = date('Y-m-d H:i:s');
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public static function find()
    {
        return new PasienMonitoringTtvQuery(get_called_class());
    }
    public function getPerawat()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'perawat_id']);
    }
    public function getPerawatVaskuler()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'perawat_vaskuler']);
    }
    public function getPerawatEvaluasi()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'perawat_evaluasi']);
    }
    public function getPerawatFinal()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'perawat_final']);
    }
    public function getPerawatBatal()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'perawat_batal']);
    }
    public function getLayanan()
    {
        return $this->hasOne(Layanan::className(),['id'=>'layanan_id']);
    }
    

}




