<?php

namespace app\models\medis;

use Yii;
use app\models\pegawai\TbPegawai;
use app\models\pendaftaran\Layanan;
/**
 * This is the model class for table "medis.dpjp".
 *
 * @property int $id
 * @property int $layanan_id reff pendaftaran.layanan.id
 * @property int $dokter_id reff pegawai.tb_pegawai.pegawai_id
 * @property int $utama default 0, jika 1 maka dpjp utama
 * @property string $tanggal_mulai RJ/RI default tanggal di daftarkan diruangan, jika RJ bisa kemungkinan pelayanan lebih satu hari maka add dpjp lagi
 * @property string|null $tanggal_akhir RJ/RI default null
 * @property string|null $keterangan
 * @property string $created_at
 * @property int $created_by
 * @property string|null $updated_at
 * @property int|null $updated_by
 * @property string|null $log_data
 * @property int $is_deleted
 */
class Dpjp extends BaseModelAR
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'medis.dpjp';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['layanan_id', 'dokter_id', 'tanggal_mulai','utama'], 'required'],
            // [['layanan_id', 'dokter_id', 'utama', 'created_by', 'updated_by', 'is_deleted'], 'default', 'value' => null],
            [['layanan_id', 'dokter_id', 'utama', 'created_by', 'updated_by', 'is_deleted'], 'integer'],
            [['tanggal_mulai', 'tanggal_akhir', 'created_at', 'updated_at'], 'safe'],
            [['keterangan', 'log_data'], 'string'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'layanan_id' => 'Layanan ID',
            'dokter_id' => 'Dokter',
            'utama' => 'Status Dpjp',
            'tanggal_mulai' => 'Tanggal Mulai',
            'tanggal_akhir' => 'Tanggal Akhir',
            'keterangan' => 'Keterangan',
            'created_at' => 'Created At',
            'created_by' => 'Created By',
            'updated_at' => 'Updated At',
            'updated_by' => 'Updated By',
            'log_data' => 'Log Data',
            'is_deleted' => 'Is Deleted',
        ];
    }
    public function beforeSave($insert) {
        if ($insert) {
            $this->is_deleted = 0;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
    /**
     * {@inheritdoc}
     * @return DpjpriQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new DpjpQuery(get_called_class());
    }
    function getDokter()
    {
        return $this->hasOne(TbPegawai::className(),['pegawai_id'=>'dokter_id']);
    }
    function getLayanan()
    {
        return $this->hasOne(Layanan::className(),['id'=>'layanan_id']);
    }
}
